# vs C语言
***
+ 放弃落后的头文件，采用import引入包，更快的编译速度
+ 没有宏
+ 和C一样精确的内存布局
+ 明确位宽的基本类型：int8,int16,int32,int64,float32,float64
+ 动态数组作为内置类型
+ 可以返回局部变量的地址
+ 没有指针的算数运算
+ 内存总是初始化为0
+ 整数和指针不再自动转换为布尔表达式
+ 支持闭包
+ 多项返回和赋值

# vs C++
***
+ 隐式实现接口，无需明确的implements
+ 没有构造和析构函数
+ 由defer关键字提供RAII的支持，避免内存之外的资源泄露
+ 不支持泛型
+ 包能起到信息隐藏的作用
+ 丰富的标准库

# vs Erlang
***
+ 静态语言，编译期类型安全
+ 命令式语言，C家族成员，易于上手
+ 开放活跃的社区
+ 相似的并发模型
